<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="b5fee55f-a695-49ca-8508-4adf0397059a" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/.readthedocs.yaml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Script" />
        <option value="Python Unit Test" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 3
}</component>
  <component name="ProjectId" id="2vpBIYbMhl9Jut9sjyN5FSdWZNr" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;Docker.MovieQuotes/Dockerfile.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;ModuleVcsDetector.initialDetectionPerformed&quot;: &quot;true&quot;,
    &quot;Python tests.Python tests for MovieQuotes.tests.test_app.TestApp.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for MovieQuotes.tests.test_quotes_api.TestQuotesApi.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for test_app.TestApp.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for test_app.TestApp.test_get_quote.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for test_app.TestApp.test_get_stored_quotes.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for test_app.TestApp.test_save_quote.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for test_favorite_quotes.TestFavoriteQuote.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for test_python_quotes_api.TestPythonQuoteApi.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for test_quotes_api.TestQuotesApi.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for test_quotes_api.TestQuotesApi.test_get_random_quote_failure.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for test_quotes_api.TestQuotesApi.test_get_random_quote_success.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests in test_app.py.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests in test_favorite_quotes.py.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests in tests.executor&quot;: &quot;Run&quot;,
    &quot;Python.app.executor&quot;: &quot;Run&quot;,
    &quot;Python.test_storage.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
    &quot;SHELLCHECK.PATH&quot;: &quot;C:\\Users\\Jakob Kellhuber\\AppData\\Roaming\\JetBrains\\PyCharm2025.1\\plugins\\Shell Script\\shellcheck.exe&quot;,
    &quot;Shell Script.start-compose.sh.executor&quot;: &quot;Run&quot;,
    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/Users/Jakob Kellhuber/OneDrive/Dokumente/3.M-Semester/SQS/Projekt/SQS-Demo&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RunManager" selected="Docker.docker-compose: Compose Deployment">
    <configuration name="start-compose.sh" type="ShConfigurationType">
      <option name="SCRIPT_TEXT" value="" />
      <option name="INDEPENDENT_SCRIPT_PATH" value="true" />
      <option name="SCRIPT_PATH" value="$PROJECT_DIR$/docker-compose/start-compose.sh" />
      <option name="SCRIPT_OPTIONS" value="" />
      <option name="INDEPENDENT_SCRIPT_WORKING_DIRECTORY" value="true" />
      <option name="SCRIPT_WORKING_DIRECTORY" value="$PROJECT_DIR$/docker-compose" />
      <option name="INDEPENDENT_INTERPRETER_PATH" value="false" />
      <option name="INTERPRETER_PATH" value="$PROJECT_DIR$/../../../../../../../../Program Files/Git/bin/sh.exe" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="EXECUTE_IN_TERMINAL" value="true" />
      <option name="EXECUTE_SCRIPT_FILE" value="true" />
      <envs />
      <method v="2" />
    </configuration>
    <configuration name="MovieQuotes/Dockerfile" type="docker-deploy" factoryName="dockerfile" temporary="true" server-name="Docker">
      <deployment type="dockerfile">
        <settings>
          <option name="sourceFilePath" value="MovieQuotes/Dockerfile" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="dockerfile" temporary="true">
      <deployment type="dockerfile">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="docker-compose/docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="Python tests for test_quotes_api.TestQuotesApi" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="SQS-Demo" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/MovieQuotes/tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_quotes_api.TestQuotesApi&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for test_quotes_api.TestQuotesApi.test_get_random_quote_failure" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="SQS-Demo" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/MovieQuotes/tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_quotes_api.TestQuotesApi.test_get_random_quote_failure&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests in tests" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="SQS-Demo" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/MovieQuotes/tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;$PROJECT_DIR$/MovieQuotes/tests&quot;" />
      <option name="_new_targetType" value="&quot;PATH&quot;" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Docker.MovieQuotes/Dockerfile" />
      <item itemvalue="Docker.docker-compose: Compose Deployment" />
      <item itemvalue="Python tests.Python tests for test_quotes_api.TestQuotesApi.test_get_random_quote_failure" />
      <item itemvalue="Python tests.Python tests in tests" />
      <item itemvalue="Python tests.Python tests for test_quotes_api.TestQuotesApi" />
      <item itemvalue="Shell Script.start-compose.sh" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Docker.docker-compose: Compose Deployment" />
        <item itemvalue="Python tests.Python tests in tests" />
        <item itemvalue="Docker.MovieQuotes/Dockerfile" />
        <item itemvalue="Python tests.Python tests for test_quotes_api.TestQuotesApi" />
        <item itemvalue="Python tests.Python tests for test_quotes_api.TestQuotesApi.test_get_random_quote_failure" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-python-sdk-e0ed3721d81e-36ea0e71a18c-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-251.25410.159" />
      </set>
    </attachedChunks>
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="b5fee55f-a695-49ca-8508-4adf0397059a" name="Changes" comment="" />
      <created>1744832055857</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1744832055857</updated>
      <workItem from="1744832057124" duration="1487000" />
      <workItem from="1745576269592" duration="118000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
</project>